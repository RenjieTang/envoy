# TODO(dio): Consider to remove compiler specific part of this patch when we solely compile the
# project using clang-cl. Tracked in https://github.com/envoyproxy/envoy/issues/11974.

diff --git a/base/compiler_specific.h b/base/compiler_specific.h
index 6651220..e2eda77 100644
--- a/base/compiler_specific.h
+++ b/base/compiler_specific.h
@@ -7,10 +7,6 @@
 
 #include "build/build_config.h"
 
-#if defined(COMPILER_MSVC) && !defined(__clang__)
-#error "Only clang-cl is supported on Windows, see https://crbug.com/988071"
-#endif
-
 // This is a wrapper around `__has_cpp_attribute`, which can be used to test for
 // the presence of an attribute. In case the compiler does not support this
 // macro it will simply evaluate to 0.
@@ -75,8 +71,12 @@
 // prevent code folding, see NO_CODE_FOLDING() in base/debug/alias.h.
 // Use like:
 //   void NOT_TAIL_CALLED FooBar();
-#if defined(__clang__) && __has_attribute(not_tail_called)
+#if defined(__clang__)
+#if defined(__has_attribute)
+#if __has_attribute(not_tail_called)
 #define NOT_TAIL_CALLED __attribute__((not_tail_called))
+#endif
+#endif
 #else
 #define NOT_TAIL_CALLED
 #endif
@@ -273,7 +273,9 @@
 #endif
 #endif
 
-#if defined(__clang__) && __has_attribute(uninitialized)
+#if defined(__clang__)
+#if defined(__has_attribute)
+#if __has_attribute(uninitialized)
 // Attribute "uninitialized" disables -ftrivial-auto-var-init=pattern for
 // the specified variable.
 // Library-wide alternative is
@@ -304,6 +306,8 @@
 // E.g. platform, bot, benchmark or test name in patch description or next to
 // the attribute.
 #define STACK_UNINITIALIZED __attribute__((uninitialized))
+#endif
+#endif
 #else
 #define STACK_UNINITIALIZED
 #endif

# TODO(dio): Consider to remove the following patch when we have IDN-free optional build for URL
# library from the upstream Chromium project. This is tracked in:
# https://github.com/envoyproxy/envoy/issues/14743.

diff --git a/url/BUILD b/url/BUILD
index f2ec8da..951039b 100644
--- a/url/BUILD
+++ b/url/BUILD
@@ -52,3 +52,27 @@ cc_library(
         "//polyfills",
     ] + build_config.icuuc_deps,
 )
+
+cc_library(
+    name = "envoy_url",
+    srcs = [
+       "url_canon.cc",
+       "url_canon_internal.cc",
+       "url_canon_path.cc",
+       "url_canon_stdstring.cc",
+    ],
+    hdrs = [
+       "third_party/mozilla/url_parse.h",
+       "url_canon.h",
+       "url_canon_internal.h",
+       "url_canon_stdstring.h",
+       "url_parse_internal.h",
+    ],
+    copts = build_config.default_copts,
+    visibility = ["//visibility:public"],
+    deps = [
+       "//base",
+       "//base/strings",
+       "//polyfills",
+    ]
+)
